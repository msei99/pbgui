---
# Initial Setup for VPS
# Steps:
# 1. Change hostname
# 2. Create new user
# 3. Change root password
# 4. Disable root login
# 5. Add ssh-key to new user

- hosts: localhost
  gather_facts: no

  vars:
    hostname: "{{ hostname }}"
    ip: "{{ ip }}"

  tasks:
    - name: remove {{ip}} from known_hosts entries
      known_hosts:
        name: "{{ ip }}"
        state: absent

    - name: remove {{hostname}} from known_hosts entries
      known_hosts:
        name: "{{ hostname }}"
        state: absent

    - name: check if ssh-key exists
      stat:
        path: "{{ lookup('env', 'HOME') + '/.ssh/id_rsa.pub' }}"
      register: ssh_key_exists

    - name: create ssh-key on localhost if not exists
      openssh_keypair:
        path: "{{ lookup('env', 'HOME') + '/.ssh/id_rsa' }}"
      when: not ssh_key_exists.stat.exists

- hosts: "{{ hostname }}"
  remote_user: "{{ init_user }}"
  gather_facts: "{{ debug }}"

  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    ansible_ssh_pass: "{{ initial_root_pw }}"
    ansible_become_password: "{{ initial_root_pw }}"
    ansible_ssh_private_key_file: "{{ privatel_key_file }}"
    new_root_pw: "{{ root_pw }}"
    user: "{{ user }}"
    user_pw: "{{ user_pw }}"

  tasks:
    - name: print user
      debug:
        var: user
      tags: debug,never

    - name: display facts
      debug:
        var: ansible_facts
      tags: debug,never
    
    - name: set hostname
      hostname:
        name: "{{ hostname }}"
      become: yes

    - name: create users
      user:
        name: "{{ user }}"
        password: "{{ user_pw | password_hash('sha512') }}"
        shell: /bin/bash
        groups: sudo
      become: yes
      register: user_created
    
    - name: print user_created
      debug:
        var: user_created
      tags: debug,never
    
    - name: change root password
      user:
        name: root
        password: "{{ new_root_pw | password_hash('sha512') }}"
      become: yes
      when: 
        - new_root_pw is defined
        - new_root_pw != ""
        - new_root_pw != None
    
    - name: change ssh parameters
      block:
        - name: Disable root login
          lineinfile:
            path: /etc/ssh/sshd_config
            regexp: "^PermitRootLogin"
            line: "PermitRootLogin no"
            backup: yes

        - name: Enable password authentication
          lineinfile:
            path: /etc/ssh/sshd_config
            regexp: "^PasswordAuthentication"
            line: "PasswordAuthentication yes"
            backup: yes

        - name: Disable includes
          lineinfile:
            path: /etc/ssh/sshd_config
            regexp: "^Include"
            state: absent

        - name: restart sshd
          service:
            name: ssh
            state: restarted
          ignore_errors: yes
      become: yes
    
- hosts: "{{ hostname }}"
  remote_user: "{{ user }}"
  gather_facts: no

  vars:
    ansible_ssh_pass: "{{ user_pw }}"
    ansible_become_password: "{{ user_pw }}"
    user: "{{ user }}"
    remove_user: "{{ remove_user }}"
    init_user: "{{ init_user }}"
  
  tasks:
    - name: print user
      debug:
        var: "{{ user }}"
      tags: debug,never
    
    - name: print key
      debug:
        var: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/id_rsa.pub') }}"
      tags: debug,never

    - name: add ssh-key to new user
      authorized_key:
        user: "{{ user }}"
        key: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/id_rsa.pub') }}"

    - name: remove init user
      user:
        name: "{{ init_user }}"
        state: absent
        remove: yes
        force: yes
      become: yes
      when: remove_user
