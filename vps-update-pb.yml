---
# Update pbgui, pb6 and pb7
# Steps:
# 1. Clone pbgui repository
# 2. Restart PBRun, PBRemote and PBCoinData if pbgui repository was updated
# 3. Clone passivbot repository for pb6
# 4. Restart all pb6 bots if pb6 repository was updated
# 5. Clone passivbot repository for pb7
# 6. Restart all pb7 bots if pb7 repository was updated

- hosts: "{{ hostname }}"
  gather_facts: yes

  vars:
    # ansible_ssh_pass: "{{ user_pw }}"
    # ansible_become_password: "{{ user_pw }}"
    user: "{{ user }}"
    # user_pw: "{{ user_pw }}"

  tasks:
    - name: display facts
      debug:
        var: ansible_facts
      tags: debug,never

    - name: get install_dir
      set_fact:
        install_dir: "{{ ansible_env.HOME + '/software' }}"

    - name: clone pbgui repository
      git:
        repo: https://github.com/msei99/pbgui.git
        dest: "{{ install_dir }}/pbgui"
        version: main
        update: yes
        force: yes
      register: pbgui_repo
      notify: restart pbgui

    - name: print pbgui_repo
      debug:
        var: pbgui_repo
      tags: debug,never

    - name: check ip pb6 is installed
      stat:
        path: "{{ install_dir }}/pb6"
      register: pb6_installed

    - name: clone passivbot repository for pb6
      git:
        repo: https://github.com/enarjord/passivbot.git
        dest: "{{ install_dir }}/pb6"
        version: v6.1.4b_latest_v6
        update: yes
        force: yes
      register: pb6_repo
      notify: restart pb6
      when: pb6_installed.stat.exists

    - name: print pb6_repo
      debug:
        var: pb6_repo
      tags: debug,never

    - name: clone passivbot repository for pb7
      git:
        repo: https://github.com/enarjord/passivbot.git
        dest: "{{ install_dir }}/pb7"
        version: master
        update: yes
        force: yes
      register: pb7_repo
      notify: restart pb7

    - name: print pb7_repo
      debug:
        var: pb7_repo
      tags: debug,never

  handlers:
    - name: Install pbgui requirements
      pip:
        virtualenv: "{{ install_dir }}/venv_pbgui"
        requirements: "{{ install_dir }}/pbgui/requirements_vps.txt"
        extra_args: --upgrade pip
      listen: "restart pbgui"

    - name: Restart PBRun, PBRemote and PBCoinData
      shell: |
        source "{{ install_dir }}/venv_pbgui/bin/activate"
        python "{{ install_dir }}/pbgui/starter.py" -r PBRun PBRemote PBCoinData
      args:
        executable: /bin/bash
        chdir: "{{ install_dir }}/pbgui"
      listen: "restart pbgui"

    - name: Install pb6 requirements
      pip:
        virtualenv: "{{ install_dir }}/venv_pb6"
        requirements: "{{ install_dir }}/pb6/requirements_liveonly.txt"
        extra_args: --upgrade pip
      listen: "restart pb6"

    - name: kill all pb6 processes
      shell: "kill $(ps -ef | grep {{ install_dir }}/pb6/passivbot | grep -v grep | awk '{print $2}')"
      listen: "restart pb6"
      ignore_errors: yes

    - name: Make sure PBRun ist running
      shell: |
        source "{{ install_dir }}/venv_pbgui/bin/activate"
        python "{{ install_dir }}/pbgui/starter.py" -s PBRun
      args:
        executable: /bin/bash
        chdir: "{{ install_dir }}/pbgui"
      listen: "restart pb6"

    - name: Install pb7 requirements
      pip:
        virtualenv: "{{ install_dir }}/venv_pb7"
        requirements: "{{ install_dir }}/pb7/requirements.txt"
        extra_args: --upgrade pip
      listen: "restart pb7"

    - name: Update rust
      command: rustup update stable
      listen: "restart pb7"

    - name: Build passivbot-rust with maturin
      shell: |
        source "{{ install_dir }}/venv_pb7/bin/activate"
        maturin develop --release
      args:
        chdir: "{{ install_dir }}/pb7/passivbot-rust"
        executable: /bin/bash
      register: maturin_result
      listen: "restart pb7"

    - name: kill all pb7 processes
      shell: "kill $(ps -ef | grep {{ install_dir }}/pb7/src/main.py | grep -v grep | awk '{print $2}')"
      listen: "restart pb7"
      ignore_errors: yes
    
    - name: Make sure PBRun ist running
      shell: |
        source "{{ install_dir }}/venv_pbgui/bin/activate"
        python "{{ install_dir }}/pbgui/starter.py" -s PBRun
      args:
        executable: /bin/bash
        chdir: "{{ install_dir }}/pbgui"
      listen: "restart pb7"
